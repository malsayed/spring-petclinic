on:
  # Trigger analysis when pushing in master or pull requests, and when creating
  # a pull request. 
  push:
    branches:
      - master
  pull_request:
      types: [opened, synchronize, reopened]

name: SonarQube Analysis
jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST }}
      with:
        projectBaseDir: "."
        # args: >
        #   -Dsonar.organization=my-organization
        #   -Dsonar.projectKey=my-projectkey
        #   -Dsonar.python.coverage.reportPaths=coverage.xml
        #   -Dsonar.sources=lib/
        #   -Dsonar.test.exclusions=tests/**
        #   -Dsonar.tests=tests/
        #   -Dsonar.verbose=true
        projectKey: "petclinic"
        projectName: "petclinic"
    - name: SonarQube Quality Gate check
      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time
      timeout-minutes: 10
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        scanMetadataReportFile: target/sonar/report-task.txt


# on: pull_request
# name: SonarQube Check
# jobs:
#   sonarQubeTrigger:
#     name: SonarQube Trigger
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@master
#     - name: SonarQube Scan
#       uses: kitabisa/sonarqube-action@v1.1.1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         host: ${{ secrets.SONARQUBE_HOST }}
#         login: ${{ secrets.SONARQUBE_TOKEN }}